Architecture:


Node Structure:
Worker node:
  each node has mutiple pods on it
  requires 3 processes that must be installed on every node
    - Container runtime
    - Kubelet - Kubelet interacts between container and node
    - Kube Proxy - forwards requests
        - Services - Loadbalancer routes to pods as necessary
  create new worker by getting new bare server, install container runtime, Kubelet
  and kube proxy processes, and add to cluster

Master node manages the cluster state and the worker nodes:
  - API Server
    - cluster gateway
    - gatekeeper for authentication
  - Scheduler
    - starts pods on worker nodes, intelligent balancing
      based upon utilization
    - Kubelet starts the actual pods
  - Controller Manager detects state changes of pods
  - etcd
    - keyvalue store of cluster state
    - cluster changes are stored in the key/value store
    - acts as "cluster brain"
    - stores status info on resource/pod status

  Typically Master nodes are clustered
  Master typically runs with less resources than Workers
  Create new master by getting new bare server, install api server, Scheduler
    controller manager and etcd processes, add to cluster




  Schedule Pod:


  Monitor:
