When used:
  Each pod gets its own ip, but pods are ephemeral

Services: stable IP (persistent)
  loadbalanced via pod replicas
  loose coupling within and outside the cluster

  Ingress required to pass traffic from host to Service

ClusterIP Services:
  default type
  (get info using kubectl get pod -o wide)

In the .yaml:

  spec:
    selector:
      app: <appname>
    ports:
      - name: <proper name for port>
        protocol: TCP
        port: <exposed port>
        targetPort: <port on POD>
      - name: <proper name for port -NOTE: REQUIRED in multi-port service>
        protocol: TCP
        port: <second exposed port>
        targetPort: <second port on POD>
  # Additional ports (multi-port service)

  Headless Services:
  Client wants to communicate directly with Pod or pod wants to talk to specific
  pod - used for stateful apps

  How can client find IP of pods?
    API call to K8s API Server - ties app to K8s api, inefficient
    DNS lookup - (clusterIP: None in spec:)

NodePort: !! NOT SECURE !! - Testing, not PROD
  spec:
    type: NodePort
  ports:
    - protocol: TCP
      port: 3200
      targetPort: 3000
      nodePort: 30008 (Range: 30000 - 32767)

LoadBalancer Service Type:
  uses Cloud provider native LoadBalancer

  spec:
    type: LoadBalancer
    ports:
      - protocol: TCP
        port: 3200
        targetPort: 3000
        nodePort: 30008 (Range: 30000 - 32767)
