What is Ingress:

Typical config:
  my-app pod
  my-app Service (type: external?)

Ingress:
    my-app pod
    my-app service
    my-app ingress

Yaml: External Service (IP:port access)

apiVersion: v1
kind: Service
metadata:
  name: myapp-external-service
spec:
  selector:
    app: myapp
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 35010

Yaml: Ingress (URL access)

apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: myapp-ingress
spec:
  rules:
    host: myapp.com
    http:
      paths:
        - backend:
            serviceName: myapp-internal-service
            servicePort: 8080

Yaml: Internal Service:

apiVersion: v1
kind: Service
metadata:
  name: myapp-internal-service
spec:
  selector:
    app: myapp
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

Cluster config requires an Ingress Controller - selection:
  https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/

K8s Nginx Ingress Controller

Consider the environment where your cluster runs -
Cloud LBs route to the
  -> Ingress controller

Bare metal requires configuration of some kind of entrypoint
Proxy server? (similar role to LB)
  -> ingress Controller

Istio:
https://medium.com/@gareth-hunt21/building-your-own-kubernetes-playground-a-step-by-step-guide-to-setting-up-a-home-lab-with-ingress-6c3504dd4524


Minikube ingress controller:
  minikube addons enable ingress

  kubectl get ns

  ingress rule for the dashboard:
    kubectl get all -n kubernetes-dashboard

Yaml: dashboard-ingress.yaml

  apiVersion: networking.k8s.io/v1beta1
  kind: Ingress
  metadata:
    name: dashboard-ingress
    namespace: kubernetes-dashboard
  spec:
    rules:
      - host: k8s-dash.mcmahon.home
        http:
          paths:
            -backend:
              serviceName: kubernetes-dashboard
              servicePort: 80

kubectl apply -f dashboard-ingress.yaml

kubectl get ingress -n kubernetes-dashboard

look for Address to populate


Configure default backend in Ingress:

yaml:

  apiVersion: v1
  kind: Service
  metadata:
    name: default-http-backend
  spec:
    selector:
      app: default-response-app
    ports:
      - protocol: TCP
        port: 80
        targetPort: 8080


Alternate Use Cases:

Multiple paths for same host:

  apiVersion: networking.k8s.io/v1beta1
  kind: Ingress
  metadata:
    name: dashboard-ingress
    namespace: kubernetes-dashboard
  spec:
    rules:
      - host: k8s-app.mcmahon.home
        http:
          paths:
          - path: /analytics
            -backend:
              serviceName: analytics-service
              servicePort: 3000
          - path: /shopping
            -backend:
              serviceName: shopping-service
              servicePort: 8080
